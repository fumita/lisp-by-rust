# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=lisp-by-name

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: biaNvyIvISYMEnhP/J3uhM23uK2q+JxI+3lm777z+0B/GVBcork83LKy+D4arNK3mOYtcK9Ra4Y4TRGNk5HFDpfS9LGp+ahd2boj61aa5Vo0G28uZIl2tnj7k3yaivLGd6sQ+XEfp7i1j0MhJ2BC5t7e5HASru/JxFxn2pN5+Fuu2dIK8Rxudc5ha7oMUg59MCp0EQqkruunqcsBfKYghQ/FElD8hd9PXSJEFfyROHX+g4SxtSFb4Ik/ueOzCqKqmidCCQ+kJzNOCd2YAZ5hgnWnwGdWCAf65Penmipcf5P2j+wboFRpYwjIPGZ7lfMsRpYfWyw90f+5RuxRtTJYJNACqHijBwoZ9mnYq4MtIcD+OymVX0xYbGTcEOZ1jBCAnb0/Qa3ZVJYq5b2I0tYsBRp9lirYQHg7zh3F9PStvlTFmrELwQkFvwwqypCLm7ATWRhYcFX9IfDdZW/GzWTagTHp6B2h3US7Ef1IGkHvsRDjd3wkHl+MnC1PufJRvePeNdg+HAwdUA368XsXTocI+L/zCMZi3ts8lx9yukI0Hdj0l8O0BPO8g6lRjNM3pwd31gsS/ZQ8QP/P5hbhDSFuTDpi77sPcOfonyLpXVbIim/yUVfAVa96TNI6ZuWoK7h29ArDbVq37tjaGCXAD+xtY4ZYOCTGNP503uKvl5VSOZ4=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never